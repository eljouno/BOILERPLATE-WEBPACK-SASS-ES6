// Global grid For 2 containers
.gbl-grid {
  display: flex;
  justify-content: space-between;
  flex-flow: row wrap;
}

$margin: 3%;
$margin-brick: $margin/2;

@for $i from 1 to 12 {
  .gbl-grid--#{$i} {
	overflow: hidden;
	width: 100%;
	margin: 0 0 2em;

	@include media-min(L) {
	  width: calc(((100% / 12) * #{$i}) - #{$margin-brick});
	  margin: 0 #{$margin} 0 0;

	  &-last-child {
		margin-right: 0;
	  }
	}

  }
  .gbl-rgrid--#{$i} {
	overflow: hidden;
	width: 100%;
	margin: 0 0 2em;

	@include media-min(L) {
	  width: calc(((100% / 12) * #{$i}) - #{$margin-brick});
	  margin: 0;
	}
  }

}

//Custom grid for * elems with same width

$margin: 3%;
$margin-brick: $margin/2;

.grid {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;

  @for $i from 1 to 12 {
		&--items-#{$i} {
			overflow: hidden;
			width: 100%;
			margin-bottom: 1em;

			@if $i >= 7 {
				$half: round($i/2);
				$afterHalf: $half + 1;

				@include media-min(M) {
					flex: auto;
					width: calc((100% / #{$half}) - #{$margin});
					margin: 0 $margin-brick 0;

					&:first-child,
					&:nth-child(#{$afterHalf}) {
						margin: 0 $margin-brick $margin 0;
					}
					&:last-child,
					&:nth-child(#{$half}) {
						margin: 0 0 0 $margin-brick;
					}
				}
				@include media-min(XL) {
					flex: auto;
					width: calc((100% / #{$i}) - #{$margin});
					margin: 0 $margin-brick 0;

					&:first-child {
						margin: 0 $margin-brick $margin 0;
					}
					&:last-child {
						margin: 0 0 0 $margin-brick;
					}
					&:nth-child(#{$afterHalf}),
					&:nth-child(#{$half}) {
						margin: 0 $margin-brick 0;
					}
				}
			} @else if $i > 4 {
				@include media-min(M) {
					flex: auto;
					width: calc((100% / #{$i}) - #{$margin});
					margin: 0 $margin-brick 0;

					&:first-child {
						margin: 0 $margin-brick $margin 0;
					}
					&:last-child {
						margin: 0 0 0 $margin-brick;
					}
				}
			} @else {
				@include media-min(M) {
					flex: auto;
					width: calc((100% / #{$i}) - #{$margin});
					margin: 0 $margin-brick 0;

					&:first-child {
						margin: 0 $margin-brick $margin 0;
					}
					&:last-child {
						margin: 0 0 0 $margin-brick;
					}
				}
			}
		}
	}
}


.grid-bck {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-template-rows: 1fr 1fr 1fr 1fr;
	grid-gap: 30px;

	&__item {

	}
}